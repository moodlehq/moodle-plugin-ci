name: Moodle Plugin CI

on: [push, pull_request, workflow_dispatch]

jobs:
  selftest:
    name: CI test (make validate)
    runs-on: ubuntu-22.04

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup PHP 7.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
        # We want to verify that xdebug works for coverage. Once we only support
        # Moodle 3.10/PHPUnit 8 and up, we can switch our tests to pcov too.
        coverage: xdebug

    - name: Initialise
      run: make init

    - name: Validate
      run: make validate

  coverage:
    if: github.repository == 'moodlehq/moodle-plugin-ci'
    name: Code coverage (codecov)
    runs-on: ubuntu-22.04

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup PHP 7.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
        # We want to verify that xdebug works for coverage. Once we only support
        # Moodle 3.10/PHPUnit 8 and up, we can switch our tests to pcov too.
        coverage: xdebug

    - name: Initialise
      run: make init

    - name: Generate PHPUnit coverage
      run: make coverage-phpunit

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./build/logs/clover.xml
        verbose: true

  citest:
    name: Integration tests
    needs: selftest
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        # Health check to wait for postgres to start.
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        include:
          - php: '8.3'
            moodle-branch: 'main'
            moodle-app: 'true'
          - php: '8.3'
            moodle-branch: 'MOODLE_404_STABLE'
            moodle-app: 'true'
          - php: '8.2'
            moodle-branch: 'MOODLE_403_STABLE'
            moodle-app: 'true'
          - php: '8.2'
            moodle-branch: 'MOODLE_402_STABLE'
            moodle-app: 'true'
          - php: '8.1'
            moodle-branch: 'MOODLE_401_STABLE'
            moodle-app: 'true'
          - php: '8.0'
            moodle-branch: 'MOODLE_400_STABLE'
          - php: '8.0'
            moodle-branch: 'MOODLE_311_STABLE'
          - php: '7.4'
            moodle-branch: 'MOODLE_39_STABLE'

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: pgsql, zip, gd, xmlrpc, soap
        ini-values: max_input_vars=5000
        # We want to verify that xdebug works for coverage. Once we only support
        # Moodle 3.10/PHPUnit 8 and up, we can switch our tests to pcov too.
        coverage: xdebug

    - name: Initialise moodle-plugin-ci
      run: |
        make init
        cp -R tests/Fixture/moodle-local_ci ../moodle-local_ci
        echo $(cd bin; pwd) >> $GITHUB_PATH
        echo $(cd vendor/bin; pwd) >> $GITHUB_PATH
        echo "CI_BUILD_DIR="$(cd ../moodle-local_ci; pwd) >> $GITHUB_ENV
        # PHPUnit depends on en_AU.UTF-8 locale
        sudo locale-gen en_AU.UTF-8

    - name: Install moodle-plugin-ci
      run: moodle-plugin-ci install -vvv
      env:
        DB: 'pgsql'
        MOODLE_BRANCH: ${{ matrix.moodle-branch }}
        IGNORE_PATHS: 'ignore'
        IGNORE_NAMES: 'ignore_name.php'
        MUSTACHE_IGNORE_NAMES: 'broken.mustache'
        MOODLE_APP: ${{ matrix.moodle-app }}

    - name: Run Integration tests
      env:
        MOODLE_BRANCH: ${{ matrix.moodle-branch }}
      run: |
        moodle-plugin-ci phplint
        moodle-plugin-ci phpcpd
        moodle-plugin-ci phpmd
        moodle-plugin-ci phpcs --max-warnings 0
        moodle-plugin-ci phpcbf
        moodle-plugin-ci validate
        moodle-plugin-ci savepoints
        moodle-plugin-ci mustache
        moodle-plugin-ci grunt || [[ "$MOODLE_BRANCH" =~ MOODLE_3[0-9]+_STABLE ]] # Fixtures only compatible with Moodle >= 4.0
        moodle-plugin-ci phpdoc
        moodle-plugin-ci phpunit --verbose --coverage-text --fail-on-warning
        moodle-plugin-ci behat --profile default
        moodle-plugin-ci behat --profile chrome
        moodle-plugin-ci behat --profile firefox --tags="@local_ci&&~@app"

  buildphar:
    name: Build moodle-plugin-ci.phar
    needs: selftest
    runs-on: ubuntu-22.04

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        ini-values: phar.readonly = false

    - name: Build PHAR
      run: |
        make build
        php build/moodle-plugin-ci.phar list

    - name: Upload PHAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: moodle-plugin-ci.phar
        path: build/moodle-plugin-ci.phar

  phartest:
    name: Integration tests (PHAR)
    needs: buildphar
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        # Health check to wait for postgres to start.
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        include:
          # Each supported PHP version once. That's enough.
          - php: '8.3'
            moodle-branch: 'main'
            moodle-app: 'true'
          - php: '8.3'
            moodle-branch: 'MOODLE_404_STABLE'
            moodle-app: 'true'
          - php: '8.2'
            moodle-branch: 'MOODLE_403_STABLE'
            moodle-app: 'true'
          - php: '8.1'
            moodle-branch: 'MOODLE_402_STABLE'
            moodle-app: 'true'
          - php: '8.0'
            moodle-branch: 'MOODLE_401_STABLE'
            moodle-app: 'true'
          - php: '7.4'
            moodle-branch: 'MOODLE_400_STABLE'

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: pgsql, zip, gd, xmlrpc, soap
        ini-values: max_input_vars=5000
        coverage: pcov

    - name: Initialise moodle-plugin-ci
      run: |
        make init
        cp -R tests/Fixture/moodle-local_ci ../moodle-local_ci
        echo $(cd bin; pwd) >> $GITHUB_PATH
        echo $(cd vendor/bin; pwd) >> $GITHUB_PATH
        echo "CI_BUILD_DIR="$(cd ../moodle-local_ci; pwd) >> $GITHUB_ENV
        # PHPUnit depends on en_AU.UTF-8 locale
        sudo locale-gen en_AU.UTF-8

    - name: Download PHAR artifact
      uses: actions/download-artifact@v4
      with:
        name: moodle-plugin-ci.phar
        path: build

    - name: Install moodle-plugin-ci (PHAR)
      run: php build/moodle-plugin-ci.phar install -vvv
      env:
        DB: 'pgsql'
        MOODLE_BRANCH: ${{ matrix.moodle-branch }}
        IGNORE_PATHS: 'ignore'
        IGNORE_NAMES: 'ignore_name.php'
        MUSTACHE_IGNORE_NAMES: 'broken.mustache'
        MOODLE_APP: ${{ matrix.moodle-app }}

    - name: Run Integration tests (PHAR)
      env:
        MOODLE_BRANCH: ${{ matrix.moodle-branch }}
      run: |
        php build/moodle-plugin-ci.phar phplint
        php build/moodle-plugin-ci.phar phpcpd
        php build/moodle-plugin-ci.phar phpmd
        php build/moodle-plugin-ci.phar phpcs --max-warnings 0
        php build/moodle-plugin-ci.phar phpcbf
        php build/moodle-plugin-ci.phar validate
        php build/moodle-plugin-ci.phar savepoints
        php build/moodle-plugin-ci.phar mustache
        php build/moodle-plugin-ci.phar grunt
        php build/moodle-plugin-ci.phar phpdoc
        php build/moodle-plugin-ci.phar phpunit --verbose --coverage-text --fail-on-warning
        php build/moodle-plugin-ci.phar behat --profile default
        php build/moodle-plugin-ci.phar behat --profile chrome
        php build/moodle-plugin-ci.phar behat --profile firefox --tags="@local_ci&&~@app"

  selfupdatetest:
    name: SelfUpdate tests (PHAR)
    needs: buildphar
    runs-on: ubuntu-22.04
    env:
      lowest_release: '4.1.8'

    strategy:
      fail-fast: false
      matrix:
        include:
          # Each supported PHP version once. That's enough.
          - php: '8.3'
          - php: '8.2'
          - php: '8.1'
          - php: '8.0'
          - php: '7.4'

    steps:
    - name: Setup PHP ${{ matrix.php }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: pgsql, zip, gd, xmlrpc, soap
        ini-values: max_input_vars=5000
        coverage: none

    - name: Download base ${{ env.lowest_release }} PHAR artifact
      uses: robinraju/release-downloader@v1.10
      with:
        repository: moodlehq/moodle-plugin-ci
        tag: ${{ env.lowest_release }}
        fileName: moodle-plugin-ci.phar

    - name: Self update PHAR to actual
      run: |
        php moodle-plugin-ci.phar selfupdate
        php moodle-plugin-ci.phar --version | grep -qv "${{ env.lowest_release }}"

    - name: Self update rollback PHAR to base ${{ env.lowest_release }}
      run: |
        php moodle-plugin-ci.phar selfupdate --rollback
        php moodle-plugin-ci.phar --version | grep -q "${{ env.lowest_release }}"
